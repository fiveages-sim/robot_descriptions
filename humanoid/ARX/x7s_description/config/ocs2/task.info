; robot model meta-information
model_information {
  manipulatorModelType     1      // 0: Default-arm, 1: Wheel-based manipulator, 2: Floating-arm manipulator, 3: Fully actuated floating-arm manipulator
  
  ; motion joints in the URDF to consider fixed
  removeJoints {
    [0]  "neck_joint"
    [1]  "head_joint"
    [2]  "left_gripper_0"
    [3]  "left_gripper_1"
    [4]  "right_gripper_0"
    [5]  "right_gripper_1"
  }

  ; base frame of the robot (from URDF)
  baseFrame                       "base_link"
  ; end-effector frame of the robot (from URDF)
  eeFrame                         "left_gripper_center"
  eeFrame1                        "right_gripper_center"
}

model_settings
{
  usePreComputation               true
  recompileLibraries              true
}

; DDP settings
ddp
{
  algorithm                       SLQ

  nThreads                        3
  threadPriority                  50

  maxNumIterations                1
  minRelCost                      0.1
  constraintTolerance             1e-3

  displayInfo                     false
  displayShortSummary             false
  checkNumericalStability         false
  debugPrintRollout               false
  debugCaching                    false

  AbsTolODE                       1e-5
  RelTolODE                       1e-3
  maxNumStepsPerSecond            100000
  timeStep                        1e-3
  backwardPassIntegratorType      ODE45

  constraintPenaltyInitialValue   20.0
  constraintPenaltyIncreaseRate   2.0

  preComputeRiccatiTerms          true

  useFeedbackPolicy               false

  strategy                        LINE_SEARCH
  lineSearch
  {
    minStepLength                 1e-2
    maxStepLength                 1.0
    hessianCorrectionStrategy     DIAGONAL_SHIFT
    hessianCorrectionMultiple     1e-3
  }
}

; Rollout settings
rollout
{
  AbsTolODE                       1e-5
  RelTolODE                       1e-3
  timeStep                        1e-2
  integratorType                  ODE45
  maxNumStepsPerSecond            100000
  checkNumericalStability         false
}

; MPC settings
mpc
{
  timeHorizon                     1.0   ; [s]
  solutionTimeWindow              0.2   ; [s]
  coldStart                       false
  
  debugPrint                      false

  mpcDesiredFrequency             100   ; [Hz]
  mrtDesiredFrequency             400   ; [Hz]
}

; initial state
initialState
{
  ; initial state for the different types of arm base DOFs
  base
  {
    wheelBasedMobileManipulator
    {
      (0,0)  -0.5  ; position x
      (1,0)  0.0  ; position y
      (2,0)  0.0  ; heading
    }
  }

  ; initial state for the arm DOFs
  arm
  {
    (0,0)   0.0     ; lift_joint
    (1,0)   0.0     ; waist_joint

    (2,0)   0.0      ; left_shoulder_pitch
    (3,0)   1.0      ; left_shoulder_roll
    (4,0)   0.0      ; left_shoulder_yaw
    (5,0)   0.0      ; left_elbow_pitch
    (6,0)   0.0      ; left_elbow_roll
    (7,0)   0.0      ; left_wrist_pitch
    (8,0)   0.0      ; left_wrist_yaw

    (9,0)   0.0      ; right_shoulder_pitch
    (10,0)  1.0      ; right_shoulder_roll
    (11,0)  0.0      ; right_shoulder_yaw
    (12,0)  0.0      ; right_elbow_pitch
    (13,0)  0.0      ; right_elbow_roll
    (14,0)  0.0      ; right_wrist_pitch
    (15,0)  0.0      ; right_wrist_yaw
  }
}

inputCost
{
  ; control weight matrix
  R
  {
    ; input costs for the different types of arm base DOFs
    base
    {
      defaultManipulator
      {
      }

      floatingArmManipulator
      {
      }

      fullyActuatedFloatingArmManipulator
      {
        scaling 1e-2
        (0,0)  5.0  ; position x
        (1,1)  5.0  ; position y
        (2,2)  5.0  ; position z
        (3,3)  5.0  ; euler angle z
        (4,4)  5.0  ; euler angle y
        (5,5)  5.0  ; euler angle x
      }

      wheelBasedMobileManipulator
      {
        scaling 1e-2
        (0,0)  1.5  ; forward velocity
        (1,1)  1.5  ; turning velocity
      }
    }
    
    ; input costs for the arm DOFs
    arm
    {
      scaling 1e-2
        (0,0)   0.01      ; joint_lift
        (1,0)   0.01      ; joint_waist

        (2,0)   1.0      ; left_shoulder_pitch
        (3,0)   1.0      ; left_shoulder_roll
        (4,0)   1.0      ; left_shoulder_yaw
        (5,0)   1.0      ; left_elbow_pitch
        (6,0)   1.0      ; left_elbow_roll
        (7,0)   1.0      ; left_wrist_pitch
        (8,0)   1.0      ; left_wrist_yaw

        (9,0)   1.0      ; right_shoulder_pitch
        (10,0)  1.0      ; right_shoulder_roll
        (11,0)  1.0      ; right_shoulder_yaw
        (12,0)  1.0      ; right_elbow_pitch
        (13,0)  1.0      ; right_elbow_roll
        (14,0)  1.0      ; right_wrist_pitch
        (15,0)  1.0      ; right_wrist_yaw
    }
  }
}

endEffector
{
  ; end effector quadratic penalty scaling
  dualArmMode      true
  leftArm
    {
      muPosition      10.0
      muOrientation    5.0
    }

    ; 右臂特定配置
  rightArm
    {
      muPosition      10.0
      muOrientation    5.0
    }
}

finalEndEffector
{
  dualArmMode      true
  leftArm
    {
      muPosition      10.0
      muOrientation    5.0
    }

    ; 右臂特定配置
  rightArm
    {
      muPosition      10.0
      muOrientation    5.0
    }
}

selfCollision
{ 
  ; activate self-collision constraint
  activate  false

  ; TODO: Replace the collision meshes of the arm with primitive shapes.
}

; Only applied for arm joints: limits parsed from URDF
jointPositionLimits
{
  ; activate constraint
  activate  true

  ; relaxed log barrier mu
  mu      0.01

  ; relaxed log barrier delta
  delta   1e-3
}

jointVelocityLimits
{
  ; relaxed log barrier mu
  mu      0.01

  ; relaxed log barrier delta
  delta   1e-3

  lowerBound
  {
    ; velocity limits for the different types of arm base DOFs
    base
    {
      defaultManipulator
      {
      }

      floatingArmManipulator
      {
      }

      fullyActuatedFloatingArmManipulator
      {
        (0,0)  -0.1  ; linear velocity x
        (1,0)  -0.1  ; linear velocity y
        (2,0)  -0.1  ; linear velocity z
        (3,0)  -0.3  ; euler angle velocity z
        (4,0)  -0.3  ; euler angle velocity y
        (5,0)  -0.3  ; euler angle velocity x
      }

      wheelBasedMobileManipulator
      {
        (0,0)  -2.0 ; forward velocity
        (1,0)  -2.0 ; turning velocity
      }
    }

    ; velocity limits for the arm DOFs
    arm
    {
        (0,0)  -0.2       ; joint_lift [m/s]
        (1,0)  -1.0       ; waist_joint [rad/s]

        (2,0)  -1.1      ; left_shoulder_pitch [rad/s]
        (3,0)  -1.1      ; left_shoulder_roll [rad/s]
        (4,0)  -1.1      ; left_shoulder_yaw [rad/s]
        (5,0)  -1.1      ; left_elbow_pitch [rad/s]
        (6,0)  -1.1      ; left_elbow_roll [rad/s]
        (7,0)  -1.1      ; left_wrist_pitch [rad/s]
        (8,0)  -1.1      ; left_wrist_yaw [rad/s]

        (9,0)   -1.1     ; right_shoulder_pitch [rad/s]
        (10,0)  -1.1     ; right_shoulder_roll [rad/s]
        (11,0)  -1.1     ; right_shoulder_yaw [rad/s]
        (12,0)  -1.1     ; right_elbow_pitch [rad/s]
        (13,0)  -1.1     ; right_elbow_roll [rad/s]
        (14,0)  -1.1     ; right_wrist_pitch [rad/s]
        (15,0)  -1.1     ; right_wrist_yaw [rad/s]
    }
  }

  upperBound
  {
    ; velocity limits for the different types of arm base DOFs
    base
    {
      defaultManipulator
      {
      }

      floatingArmManipulator
      {
      }

      fullyActuatedFloatingArmManipulator
      {
        (0,0)  0.1  ; linear velocity x
        (1,0)  0.1  ; linear velocity y
        (2,0)  0.1  ; linear velocity z
        (3,0)  0.3  ; euler angle velocity z
        (4,0)  0.3  ; euler angle velocity y
        (5,0)  0.3  ; euler angle velocity x
      }

      wheelBasedMobileManipulator
      {
        (0,0)  2.0 ; forward velocity
        (1,0)  2.0 ; turning velocity
      }
    }

    ; velocity limits for the arm DOFs
    arm
    {
        (0,0)  0.2       ; joint_lift [m/s]
        (1,0)  1.0         ; waist_joint [rad/s]

        (2,0)  1.1      ; left_shoulder_pitch [rad/s]
        (3,0)  1.1      ; left_shoulder_roll [rad/s]
        (4,0)  1.1      ; left_shoulder_yaw [rad/s]
        (5,0)  1.1      ; left_elbow_pitch [rad/s]
        (6,0)  1.1      ; left_elbow_roll [rad/s]
        (7,0)  1.1      ; left_wrist_pitch [rad/s]
        (8,0)  1.1      ; left_wrist_yaw [rad/s]

        (9,0)  1.1      ; right_shoulder_pitch [rad/s]
        (10,0)  1.1     ; right_shoulder_roll [rad/s]
        (11,0)  1.1     ; right_shoulder_yaw [rad/s]
        (12,0)  1.1     ; right_elbow_pitch [rad/s]
        (13,0)  1.1     ; right_elbow_roll [rad/s]
        (14,0)  1.1     ; right_wrist_pitch [rad/s]
        (15,0)  1.1     ; right_wrist_yaw [rad/s]
    }
  }
}
